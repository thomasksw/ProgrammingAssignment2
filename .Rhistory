find package("devtools")
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
exit
quit
exit()
library(devtools)
find_rtools()
install.packages("slidify")
getwd
getwd()
setwd("c:\GitHub")
setwd("c:/GitHub")
setwd("C:/Users/thomas.wong/Documents/GitHub")
source("ProgrammingAssignment2")
setwd("C:/Users/thomas.wong/Documents/GitHub/ProgrammingAssignment2")
source("cachematrix.R")
makeVector(1)
makeVector()
str(set)
str(makeVector())
?srcref
set(361)
makeVector$set 361
makeVector$set(361)
makeVector$set(x <- c(numeric(361)))
makeVector$set(x <- numeric(1:8))
numeric(2)
makeVector$set(x <- numeric(8))
makeVector$set(numeric(8))
makeVector$set(numeric(1,8))
makeVector$set(numeric(4))
traceback()
makeVector
traceback()
makeVector[1]
str(makeVector)
n <- as.vector(1:8)
makeVector()
makeVector(n)
str(makeVector(n))
str(n)
makeVector
makeVector(p)
makeVector$get
?closure
makeVector[[1]]
makeVector[[1:8]]
makeVector$name
m <- makeVector
str(m)
numeric()
?numeric
?set
set(5)
makeVector[1:8]
makeVector[1]
str(makeVector)
spec_vector <- makeVector
str(spec_vector)
cachemean(spec_vector)
cachemean(makeVector)
spec_vector <- lapply(makeVector, [[ ,1)
spec_vector <- lapply(makeVector, '[[' ,1)
str(spec_vector)
spec_vector <- lapply(makeVector, '[[' ,2)
spec_vector <- lapply(makeVector, '[[' ,1)
unlist(spec_vecctor)
unlist(spec_vector)
?dput
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
str(x)
str(set)
class(set)
set(as.numeric(c(2,4,6,8,10,12,14,16)))
str(set)
str(m)
get()
get(x)
?numeric
makeVector(4)
makeVector(test)
set(1:3)
str(x)
get(x)
get()
get() x
setmean(2)
str(x)
x.get()
y <- get()
y <- get(x)
y <- get(1:3)
get
get("1")
get(1)
get(p)
get(m)
makeVector
set(1:8)
get(x)
get(m)
get <- function() x
str(get)
get(3)
get('[[')
str(x)
b <- get()
str(b)
c <- setmean(3.14)
str(makeVector)
c <- setmean(3)
makeVector()
makeVector$setmean
makeVector[[setmean]]
setmean(3)
?unlist
?unlist(makeVector)
unlist(makeVector)
b <- unlist(makeVector)
str(b)
str(makeVector)
makeVector
a <- makeVector
str(a)
a <- c(b = 1, c = 6)
set(a)
str(x)
get(p)
p <- get()
str(p)
q <- setmean(3)
setmean(p)
str(mean)
str(m)
setmean <- function(mean) m <<- mean
setmean(mean(p))
getmean
getmean <- function() m
m()
r <- m()
a <- makeVector(1:8)
str(a)
a <- makeVector(1:10)
str(a)
a <- makeVector(1:6)
str(a)
a <- makeVector(1:3)
str(a)
b <- list("a", 1, 1:3, "Hi")
str(b)
b$1
b[[1]]
str(a)
a[[1:8]]
k <- 1:4
a[[1]](k)
str(a)
a[[2]]()
a[[3]](6)
y <- a[[4]]()
str(y)
k <- 1:5
set(k)
l <- get()
setmean(9)
getmean()
data <- a$get()
m <- mean(data, ...)
m <- mean(data)
a$setmean(m)
m
i <- matrix(1:8,2*4)
str(i)
i <- matrix(1:8,2,4)
str(i)
i <- matrix(1:8,nrow = 2, ncol = 4)
str(i)
i
i <- matrix(1:9,nrow = 3, ncol = 3)
i
solve(i)
?solve
i <- matrix(1:16,nrow = 4, ncol = 4)
solve(i)
j <- matrix(1:16,nrow = 4, ncol = 4)
j
solve(j)
j <- matrix(1,nrow = 2, ncol = 2)
solve(j)
j <- matrix(c(1,2,2,4),nrow = 2, ncol = 2)
j
solve(j)
Returns<-matrix(runif(6786,-1,1), nrow=261)
Means   <- colMeans(Returns)
Sigma   <- cov(Returns)
invSigma <- solve(Sigma)
invSigma
str(invSigma)
?cov
a[[1]](k)
?cov
i <- matrix(1:8,2,4)
a <- makeVector()
Returns<-matrix(runif(6786,-1,1), nrow=10)
Returns<-matrix(runif(676,-1,1), nrow=10)
Returns<-matrix(runif(676,-1,1), nrow=26)
str(Returns)
means <- colmean(Returns)
means <- colmeans(Returns)
means <- colMeans(Returns)
str(mean)
sigma <- cov(Returns)
str(sigma)
invSigma <- solve(Sigma)
invSigma
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
invSigma <- solve(Sigma)
invSigma
r <- invSigma %*% Sigma
str(r)
r
getwd()
source("cachematrix.R")
getwd()
source("cachematrix.R")
source("cachematrix.R")
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
cacheSolve(sigma)
?match
source("cachematrix.R")
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
cacheSolve(sigma)
?==
source("cachematrix.R")
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
cacheSolve(sigma)
source("cachematrix.R")
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
cacheSolve(sigma)
a$get()
a$getinv()
str(a)
?set
??set
a$get()
sigma
a$set(sigma)
a$get()
cache_m
a$getinv()
a$getinv
a$get
a$getinv
a$getinv()
inv_x <- solve(sigma)
Returns<-matrix(runif(676,-1,1), nrow=25)
Returns<-matrix(runif(676,-1,1), nrow=26)
seed =2
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
inv_x <- solve(sigma)
Returns<-matrix(runif(676,-1,1), nrow=26)
Returns<-matrix(runif(6786,-1,1), nrow=261)
Means   <- colMeans(Returns)
Sigma   <- cov(Returns)
invSigma <- solve(Sigma)
inv_v <- solve(Sigma)
str(inv_v)
a$setinv(inv_v)
str(a)
b <- makeCacheMatrix(sigma)
str(b)
str(set)
makeCacheMatrix(x = matrix())
y <- matrix(1:4,2, 2)
y
a <- makeCacheMatrix(x = matrix())
a
a$set(y)
a
a$get()
a$setinv(y)
a$getinv()
m <- a$getinv()
m
v <- as.vector(m[1])
v
v <- as.vector(m[1,])
v
getwd()
source{"cachematrix.R"}
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
Returns<-matrix(runif(676,-1,1), nrow=26)
sigma <- cov(Returns)
a <- makeCacheMatrix(x = matrix())
a$set(sigma)
ret <- cacheSolve(a$get())
ret <- cacheSolve(a)
ret <- cacheSolve(a)
Returns<-matrix(runif(6786,-1,1), nrow=261)
sigma <- cov(Returns)
a$set(sigma)
ret <- cacheSolve(a)
ret
ret <- cacheSolve(a)
Returns<-matrix(runif(6475,-1,1), nrow=25)
sigma <- cov(Returns)
inv <- solve(Sigma)
inv
Returns<-matrix(runif(6475,-1,1), nrow=25)
> sigma <- cov(Returns)
Returns<-matrix(runif(6475,-1,1), nrow=25)
sigma <- cov(Returns)
a <- makeCacheMatrix(x = matrix())
a$set(sigma)
ret2 <- solve(Sigma)
ret2
str(ret)
str(ret2)
str(inv)
source("cachematrix.R")
Returns2 <-matrix(runif(6786,-1,1), nrow=26)
sigma1 <- cov(Returns)
a1 <- makeCacheMatrix(x = matrix())
a1$set(sigma1)
ret1 <- a$getinv()
str(ret1)
a1$get()
str(a1$get())
ret1 <- cacheSolve(a1$get())
str(a1$get())
source("cachematrix.R")
source("test_cachematrix.R")
test-cmatrix1
test_cmatrix1()
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix1()
test_cmatrix2()
data_matrix2 <-matrix(runif(6475,-1,1), nrow=25)
sigma_2 <- cov(data_matrix2)
a2 <- makeCacheMatrix(x = matrix())
a2$set(sigma_2)
ret2 <- cacheSolve(a2)
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix2()
test_cmatrix1()
source("test_cachematrix.R")
test_cmatrix2()
test_cmatrix1()
test_cmatrix1()
test_cmatrix1()
test_cmatrix2()
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix1()
test_cmatrix2()
test_cmatrix3()
test_cmatrix2()
str(a2)
a2$getinv()
a2$get()
test_cmatrix2()
str(a2$getinv())
test_cmatrix2()
test_cmatrix3()
cacheSolve(a2)
str(a2$getinv())
test_cmatrix2()
str(a2$getinv())
test_cmatrix2()
test_cmatrix2()
source("test_cachematrix.R")
source("test_cachematrix1.R")
dir()
source("test_cachematrix.R")
test_cmatrix2()
test_cmatrix3()
test_cmatrix1()
a2$getinv()
str(a2$get())
str(a2$getinv())
source("test_cachematrix.R")
test_cmatrix2()
test_cmatrix3()
a2$get()
str(a2$get())
test_cmatrix2()
str(a2$getinv())
test_cmatrix2()
str(a2$get())
str(a2$getinv())
source("test_cachematrix.R")
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix2()
test_cmatrix1()
source("test_cachematrix.R")
test_cmatrix1()
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix1()
test_cmatrix2()
source("test_cachematrix.R")
test_cmatrix2()
